kind: Template
apiVersion: v1
template: spark
metadata:
  name: apache-spark
  creationTimestamp: null
  annotations:
    description: Apache Spark with 3 worker nodes.
    iconClass: icon-nodejs
    tags: quickstart,Apache,Spark,apachespark
labels:
  app: sparkcluster
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: spark-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}
    labels:
      name: ${MASTER_NAME}
  spec:
    ports:
      - protocol: TCP
        port: 7077
        targetPort: 7077
    selector:
      name: ${MASTER_NAME}

- kind: Service
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}-webui
    labels:
      name: ${MASTER_NAME}
  spec:
    ports:
      - protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      name: ${MASTER_NAME}

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}
  spec:
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
    replicas: 1
    selector:
      name: ${MASTER_NAME}
    template:
      metadata:
        labels:
          name: ${MASTER_NAME}
      spec:
        containers:
          - name: ${MASTER_NAME}
            image: ${SPARK_IMAGE}
            env:
              - name: SPARK_MASTER_PORT
                value: "7077"
              - name: SPARK_MASTER_WEBUI_PORT
                value: "8080"
              - name: NSS_WRAPPER_PASSWD
                value: /tmp/passwd
              - name: NSS_WRAPPER_GROUP
                value: /etc/group
              - name: LD_PRELOAD
                value: libnss_wrapper.so
            ports:
              - containerPort: 7077
                protocol: TCP
              - containerPort: 8080
                protocol: TCP
            volumeMounts:
              - mountPath: /data
                name: spark-data
        volumes:
          - name: spark-data
            persistentVolumeClaim:
              claimName: spark-claim



- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${WORKER_NAME}
  spec:
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
    replicas: 3
    selector:
      name: ${WORKER_NAME}
    template:
      metadata:
        labels:
          name: ${WORKER_NAME}
      spec:
        containers:
          - name: ${WORKER_NAME}
            image: ${SPARK_IMAGE}
            env:
              - name: SPARK_MASTER_ADDRESS
                value: spark://${MASTER_NAME}:7077
              - name: SPARK_MASTER_UI_ADDRESS
                value: http://${MASTER_NAME}-webui:8080
              - name: NSS_WRAPPER_PASSWD
                value: /tmp/passwd
              - name: NSS_WRAPPER_GROUP
                value: /etc/group
              - name: LD_PRELOAD
                value: libnss_wrapper.so
            volumeMounts:
              - mountPath: /data
                name: spark-data
        volumes:
          - name: spark-data
            persistentVolumeClaim:
              claimName: spark-claim
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: apachespark-${MASTER_NAME}-webui
    name: ${MASTER_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${MASTER_NAME}-webui
  status:
    ingress: null
parameters:
- name: SPARK_IMAGE
  description: Name of the Spark master/worker image
  value: 10.193.127.18:5000/openshift/apachespark:latest
- name: MASTER_NAME
  description: master name used as a service name and a selector
  generate: expression
  from: "spark-master-[a-z0-9]{4}"
  required: true
- name: WORKER_NAME
  description: worker name used as a selector
  generate: expression
  from: "spark-worker-[a-z0-9]{4}"
  required: true
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
